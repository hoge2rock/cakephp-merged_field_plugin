■概要
このプラグインを使うと、モデルの複数のフィールドをまとめてテーブルの1つの実カラムに格納することが出来ます。

例えばusersというテーブルを使うUserモデルが有ったとして、
実テーブルにはid, name, そしてTEXT型のmerged_configといカラムしか無いとします。
このプラグインを使うと
$this->User->save(
	array(
		'id' => 1,
		'name' => 'foobar',
		'name_prefix' => 'Dr.',
		'name_suffix' => 'et al',
		'auth_timeout' => '86400',
);
のように実カラムが存在しない値を
name_prefix:Dr
name_suffix:et al
auth_timeout:86400
のようなテキストに結合してmerged_configカラムに格納します。

このような事を行う利点は
・後でモデルに属性を追加する際に実テーブルの設計を変更する必要がない
・テーブル構造をシンプルにできる
などが挙げられます。

アプリケーションによってはあるモデルのカラム数が数百個になることも珍しく有りません。
ですが、大抵の場合、その中で検索条件やソートに用いられているカラムはごく一部に限られます。
検索やソートに使うわけでもない属性であれば、RDBに実カラムがなくても支障はありません。
また、TEXT型のカラムにマージ出来るものはマージした方がパフォーマンス的にも開発効率の面でも優れています。


■このプラグインで不可能なこと
・仮想的なフィールドの値を条件に用いた検索やソートは出来ません。


■使い方

1. mergid_fieldディレクトリをapp/pluginsディレクトリの中に移動する。

2. AppModelに下記の様にactsAsプロパティを追加する。
	var $actsAs = array(
		'MergedField.MergedField' => array(
			'models' => array(
				'User' => array( //対象モデル名。Userは適宜編集
					'config' => array( 
						'fieldName' => 'merged_config', //テーブルに存在する実カラム名。configを適宜編集
						'delimiter' => "\n", //マージする際のデリミタ。\nを適宜編集
						'targets' => array( //この配列はマージ対象の仮想的なフィールドとデフォルト値
							'name_prefix' => 'foo',
							'name_suffix' => 'bar',
							'send_notify' => 'yes',
							'auth_timeout' => '3600',
							),
						),
					),
				),
			),
	);

3. 通常のモデルと同様に使用可能です。仮想フィールドを用いた検索とソートが出来ない点を除けば、通常のカラムと同様に扱うことができます。
